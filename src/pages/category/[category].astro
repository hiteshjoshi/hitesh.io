---
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import Layout from "../../components/Layout.astro";
import Header from "../../components/Header.astro";
import "../../styles/tailwind.css";

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    const uniqueCategories = [
        ...new Set(posts.map((post) => post.data.categories).flat()),
    ];
    return uniqueCategories.map((category) => {
        const filteredPosts = posts
            .filter((post) => post.data.categories.includes(category))
            .sort(
                (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
            );
        return {
            params: { category },
            props: { posts: filteredPosts },
        };
    });
}

const { posts } = Astro.props;
const { category } = Astro.params;
---

<Layout title={`Posts tagged with #${category} | Hitesh Joshi`}>
    <Header />

    <main class="max-w-4xl mx-auto px-6 py-16">
        <!-- Category Header -->
        <section class="mb-12">
            <h1
                class="text-3xl md:text-4xl font-bold mb-4 text-gray-900 dark:text-gray-100"
            >
                Posts tagged with
                <span
                    class="inline-block px-3 py-1 bg-gray-100 dark:bg-gray-800 rounded-lg"
                >
                    #{category}
                </span>
            </h1>
            <p class="text-gray-600 dark:text-gray-400">
                {posts.length} post{posts.length !== 1 ? "s" : ""} found
            </p>
        </section>

        <!-- Posts List -->
        <section>
            <div class="space-y-8">
                {
                    posts.map((post, index) => (
                        <article
                            class="post-item group"
                            style={`animation-delay: ${index * 100}ms`}
                        >
                            <a
                                href={`/${post.slug}/`}
                                class="block py-6 -mx-4 px-4 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors"
                            >
                                <div class="flex flex-col sm:flex-row sm:items-baseline sm:justify-between mb-2">
                                    <h2 class="text-xl font-semibold text-gray-900 dark:text-gray-100 group-hover:text-gray-700 dark:group-hover:text-gray-300 transition-colors">
                                        {post.data.title}
                                    </h2>
                                    <time
                                        class="text-sm text-gray-500 dark:text-gray-500 mt-1 sm:mt-0"
                                        datetime={post.data.pubDate.toISOString()}
                                    >
                                        <FormattedDate
                                            date={
                                                post.data.updatedDate ||
                                                post.data.pubDate
                                            }
                                        />
                                    </time>
                                </div>

                                <p class="text-gray-600 dark:text-gray-400 leading-relaxed">
                                    {post.data.description}
                                </p>

                                {post.data.categories &&
                                    post.data.categories.length > 0 && (
                                        <div class="mt-3 flex flex-wrap gap-2">
                                            {post.data.categories.map((cat) => (
                                                <span
                                                    class:list={[
                                                        "text-xs px-2 py-1 rounded",
                                                        cat === category
                                                            ? "bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900"
                                                            : "bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400",
                                                    ]}
                                                >
                                                    {cat}
                                                </span>
                                            ))}
                                        </div>
                                    )}
                            </a>
                        </article>
                    ))
                }
            </div>
        </section>

        <!-- Back to home -->
        <div class="mt-16">
            <a
                href="/"
                class="inline-flex items-center gap-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 transition-colors"
            >
                <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to all posts
            </a>
        </div>
    </main>
</Layout>
