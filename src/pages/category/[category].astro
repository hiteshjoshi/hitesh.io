---
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import Layout from "../../components/Layout.astro";
import Header from "../../components/Header.astro";

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    const uniqueCategories = [
        ...new Set(posts.map((post) => post.data.categories).flat()),
    ];
    return uniqueCategories.map((category) => {
        const filteredPosts = posts
            .filter((post) => post.data.categories.includes(category))
            .sort(
                (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
            );
        return {
            params: { category },
            props: { posts: filteredPosts },
        };
    });
}

const { posts } = Astro.props;
const { category } = Astro.params;
---

<Layout title={`Posts tagged with #${category} | Hitesh Joshi`}>
    <Header />

    <main class="container main">
        <!-- Category Header -->
        <section class="hero">
            <h1 class="hero-title">
                Posts tagged with
                <span class="category-badge">
                    #{category}
                </span>
            </h1>
            <p style="color: var(--color-text-secondary);">
                {posts.length} post{posts.length !== 1 ? "s" : ""} found
            </p>
        </section>

        <!-- Posts List -->
        <section>
            <div class="posts-list">
                {
                    posts.map((post) => (
                        <article class="post-item">
                            <a href={`/${post.slug}/`} class="post-link">
                                <div class="post-header">
                                    <h2 class="post-title">
                                        {post.data.title}
                                    </h2>
                                    <time
                                        class="post-date"
                                        datetime={post.data.pubDate.toISOString()}
                                    >
                                        <FormattedDate
                                            date={
                                                post.data.updatedDate ||
                                                post.data.pubDate
                                            }
                                        />
                                    </time>
                                </div>

                                <p class="post-description">
                                    {post.data.description}
                                </p>

                                {post.data.categories &&
                                    post.data.categories.length > 0 && (
                                        <div class="post-categories">
                                            {post.data.categories.map((cat) => (
                                                <span
                                                    class={
                                                        cat === category
                                                            ? "post-category category-badge-active"
                                                            : "post-category"
                                                    }
                                                >
                                                    {cat}
                                                </span>
                                            ))}
                                        </div>
                                    )}
                            </a>
                        </article>
                    ))
                }
            </div>
        </section>

        <!-- Back to home -->
        <div style="margin-top: var(--space-16);">
            <a href="/" class="back-link">
                <svg
                    width="16"
                    height="16"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to all posts
            </a>
        </div>
    </main>
</Layout>
